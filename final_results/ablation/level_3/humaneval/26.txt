{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nvector<int> remove_duplicates(vector<int> numbers){\nvector<int> out={};\n    vector<int> has1={};\n    vector<int> has2={};\n    for (int i=0;i<numbers.size();i++)\n    {\n        if (find(has2.begin(),has2.end(),numbers[i])!=has2.end()) continue;\n        if (find(has1.begin(),has1.end(),numbers[i])!=has1.end())\n        {\n\n            has2.push_back(numbers[i]);\n        }\n        else has1.push_back(numbers[i]);\n    }\n    for (int i=0;i<numbers.size();i++)\n    if (find(has2.begin(),has2.end(),numbers[i])==has2.end())\n        out.push_back(numbers[i]);\n    return out;\n\n\n}",
        63.287,
        1.212,
        4980868443.6,
        21033.6,
        0.825,
        27
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <unordered_set>\n#include <algorithm>\nusing namespace std;\n\nvector<int> remove_duplicates(vector<int> numbers) {\n    unordered_set<int> seen;\n    unordered_set<int> duplicates;\n    vector<int> out;\n\n    for (int num : numbers) {\n        if (seen.count(num)) {\n            duplicates.insert(num);\n        } else {\n            seen.insert(num);\n        }\n    }\n\n    for (int num : numbers) {\n        if (!duplicates.count(num)) {\n            out.push_back(num);\n        }\n    }\n\n    return out;\n}\n\n",
        10.978,
        8.251,
        70.23,
        0.996,
        8.243,
        29
    ]
}