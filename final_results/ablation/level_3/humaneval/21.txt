{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<float> rescale_to_unit(vector<float> numbers){\nfloat min=100000,max=-100000;\n    for (int i=0;i<numbers.size();i++)\n        {\n            if (numbers[i]<min) min=numbers[i];\n            if (numbers[i]>max) max=numbers[i];\n        }\n    for (int i=0;i<numbers.size();i++)\n        numbers[i]=(numbers[i]-min)/(max-min);\n    return numbers;\n}",
        4.589,
        0.126,
        10676317.4,
        21086.4,
        7.921,
        17
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <algorithm> \n\nusing namespace std;\n\nvector<float> rescale_to_unit(vector<float> numbers) {\n    if (numbers.empty()) return numbers; \n    \n    \n    float min = numbers[0];\n    float max = numbers[0];\n    \n    \n    for (int i = 0, n = numbers.size(); i < n; ++i) {\n        \n        min = std::min(min, numbers[i]);\n        max = std::max(max, numbers[i]);\n    }\n    \n    \n    if (max != min) { \n        for (int i = 0, n = numbers.size(); i < n; ++i) {\n            numbers[i] = (numbers[i] - min) / (max - min);\n        }\n    }\n    \n    else {\n        fill(numbers.begin(), numbers.end(), 0.0f);\n    }\n    \n    return numbers;\n}",
        0.984,
        0.984,
        1.042,
        1.003,
        0.984,
        33
    ]
}