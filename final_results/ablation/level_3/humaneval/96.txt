{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<int> count_up_to(int n){\nvector<int> out={};\n    int i,j;\n    for (i=2;i<n;i++)\n        if (out.size()==0) {out.push_back(i);}\n        else\n        {\n            bool isp=true;\n            for (j=0;out[j]*out[j]<=i;j++)\n                if (i%out[j]==0) isp=false;\n            if (isp) out.push_back(i);\n        }\n    return out;\n}",
        5.107,
        0.137,
        38464165.0,
        21099.2,
        7.29,
        20
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nvector<int> count_up_to(int n) {\n    vector<bool> is_prime(n, true); \n    vector<int> primes;\n    if (n <= 2) return primes; \n\n    is_prime[0] = is_prime[1] = false; \n\n    for (int i = 2; i < sqrt(n) + 1; ++i) {\n        if (is_prime[i]) {\n            for (int j = i * i; j < n; j += i) {\n                is_prime[j] = false; \n            }\n        }\n    }\n\n    for (int i = 2; i < n; ++i) {\n        if (is_prime[i]) {\n            primes.push_back(i);\n        }\n    }\n\n    return primes;\n}\n\n\n",
        1.039,
        1.061,
        2.01,
        0.998,
        1.061,
        30
    ]
}