{
    "0": [
        "#include<stdio.h>\n#include<string>\nusing namespace std;\n#include<algorithm>\n#include<math.h>\n#include<stdlib.h>\nstring string_xor(string a,string b){\nstring output=\"\";\n    for (int i=0;(i<a.length() and i<b.length());i++)\n    {\n        if (i<a.length() and i<b.length())\n        {\n            if (a[i]== b[i]) \n            {\n                output+='0';\n            }  \n            else output+='1';\n        }\n        else\n        {\n            if (i>=a.length()) \n            {\n            output+=b[i];\n            }\n            else output+=a[i];\n        }\n    }\n    return output;\n}",
        4.636,
        0.127,
        4071276.0,
        21032.8,
        7.85,
        29
    ],
    "1": [
        "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nstring string_xor(const string &a, const string &b) {\n    size_t len = min(a.length(), b.length());\n    string output;\n    output.reserve(max(a.length(), b.length())); \n\n    for (size_t i = 0; i < len; ++i) {\n        \n        output += (a[i] == b[i]) ? '0' : '1';\n    }\n\n    \n    if (a.length() > len) {\n        output.append(a.begin() + len, a.end());\n    } else if (b.length() > len) {\n        output.append(b.begin() + len, b.end());\n    }\n\n    return output;\n}",
        1.043,
        0.976,
        0.875,
        0.999,
        0.978,
        25
    ]
}