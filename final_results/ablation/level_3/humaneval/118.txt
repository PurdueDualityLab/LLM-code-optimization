{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<stdlib.h>\nstring get_closest_vowel(string word){\nstring out=\"\";\n    string vowels=\"AEIOUaeiou\";\n    for (int i=word.length()-2;i>=1;i-=1)\n        if (find(vowels.begin(),vowels.end(),word[i])!=vowels.end())\n            if (find(vowels.begin(),vowels.end(),word[i+1])==vowels.end())\n                if (find(vowels.begin(),vowels.end(),word[i-1])==vowels.end())\n                    return out+word[i];\n    return out;\n}",
        4.791,
        0.126,
        19827317.8,
        21041.6,
        7.915,
        16
    ],
    "1": [
        "#include <stdio.h>\n#include <string>\n#include <unordered_set>\nusing namespace std;\n\nstring get_closest_vowel(string word) {\n    string out = \"\";\n    unordered_set<char> vowels = {'A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u'};\n    for (int i = word.length() - 2; i >= 1; --i) {\n        if (vowels.find(word[i]) != vowels.end() && \n            vowels.find(word[i + 1]) == vowels.end() &&\n            vowels.find(word[i - 1]) == vowels.end()) {\n            return out + word[i];\n        }\n    }\n    return out;\n}",
        0.964,
        0.971,
        0.95,
        0.997,
        0.972,
        17
    ]
}