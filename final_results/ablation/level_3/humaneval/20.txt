{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<float> find_closest_elements(vector<float> numbers){\nvector<float> out={};\n    for (int i=0;i<numbers.size();i++)\n    for (int j=i+1;j<numbers.size();j++)\n        if (out.size()==0 or abs(numbers[i]-numbers[j])<abs(out[0]-out[1]))\n            out={numbers[i],numbers[j]};\n    if (out[0]>out[1])\n        out={out[1],out[0]};\n    return out;\n}",
        44.278,
        0.866,
        3348645698.0,
        20982.4,
        1.155,
        16
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nvector<float> find_closest_elements(vector<float> numbers) {\n    if (numbers.size() < 2) return {};\n\n    \n    sort(numbers.begin(), numbers.end());\n\n    \n    float min_diff = fabs(numbers[1] - numbers[0]);\n    vector<float> out = {numbers[0], numbers[1]};\n\n    for (size_t i = 2; i < numbers.size(); ++i) {\n        float diff = fabs(numbers[i] - numbers[i - 1]);\n        if (diff < min_diff) {\n            min_diff = diff;\n            out = {numbers[i - 1], numbers[i]};\n        }\n    }\n\n    return out;\n}",
        9.609,
        5.995,
        178.258,
        0.991,
        5.987,
        26
    ]
}