{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nfloat mean_absolute_deviation(vector<float> numbers){\nfloat sum=0;\n    float avg,msum,mavg;\n    int i=0;\n    for (i=0;i<numbers.size();i++)\n        sum+=numbers[i];\n    avg=sum/numbers.size();\n    msum=0;\n    for (i=0;i<numbers.size();i++)\n        msum+=abs(numbers[i]-avg);\n    return msum/numbers.size();\n}",
        10.678,
        0.117,
        9849493.0,
        21099.2,
        8.522,
        18
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <numeric>\n\nusing namespace std;\n\nfloat mean_absolute_deviation(const vector<float>& numbers) {\n    if (numbers.empty()) return 0.0f;  \n    \n    float sum = std::accumulate(numbers.begin(), numbers.end(), 0.0f);\n    float avg = sum / numbers.size();\n\n    \n    float msum = 0.0f;\n    for (auto num : numbers) {\n        msum += fabs(num - avg);\n    }\n\n    return msum / numbers.size();\n}",
        0.874,
        0.875,
        0.819,
        0.997,
        0.877,
        21
    ]
}