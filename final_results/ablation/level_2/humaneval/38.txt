{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<string>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nstring encode_cyclic(string s){ \n    int l=s.length();\n    int num=(l+2)/3;\n    string x,output;\n    int i;\n    for (i=0;i*3<l;i++)\n    {\n        x=s.substr(i*3,3);\n        if (x.length()==3) x=x.substr(1)+x[0];\n        output=output+x;\n    }\n    return output;\n}\n\n\nstring decode_cyclic(string s){ \n int l=s.length();\n    int num=(l+2)/3;\n    string x,output;\n    int i;\n    for (i=0;i*3<l;i++)\n    {\n        x=s.substr(i*3,3);\n        if (x.length()==3) x=x[2]+x.substr(0,2);\n        output=output+x;\n    }\n    return output;\n}",
        12.241,
        0.14,
        23455292.8,
        20946.4,
        7.148,
        34
    ],
    "1": [
        "#include <iostream>\n#include <string>\nusing namespace std;\n\nstring encode_cyclic(string s) {\n    int l = s.length();\n    string output;\n    output.reserve(l); \n    for (int i = 0; i * 3 < l; i++) {\n        int startIdx = i * 3;\n        if (startIdx + 2 < l) { \n            output += s[startIdx + 1];\n            output += s[startIdx + 2];\n            output += s[startIdx];\n        } else {\n            \n            while (startIdx < l) {\n                output += s[startIdx++];\n            }\n        }\n    }\n    return output;\n}\n\nstring decode_cyclic(string s) {\n    int l = s.length();\n    string output;\n    output.reserve(l); \n    for (int i = 0; i * 3 < l; i++) {\n        int startIdx = i * 3;\n        if (startIdx + 2 < l) { \n            output += s[startIdx + 2];\n            output += s[startIdx];\n            output += s[startIdx + 1];\n        } else {\n            \n            while (startIdx < l) {\n                output += s[startIdx++];\n            }\n        }\n    }\n    return output;\n}\n\n",
        1.181,
        1.203,
        3.794,
        0.992,
        1.2,
        44
    ]
}