{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nint search(vector<int> lst){\nvector<vector<int>> freq={};\n    int max=-1;\n    for (int i=0;i<lst.size();i++)\n    {\n        bool has=false;\n        for (int j=0;j<freq.size();j++)\n            if (lst[i]==freq[j][0]) \n            {\n            freq[j][1]+=1;\n            has=true;\n            if (freq[j][1]>=freq[j][0] and freq[j][0]>max) max=freq[j][0];\n            }\n        if (not(has)) \n        {\n        freq.push_back({lst[i],1});\n        if (max==-1 and lst[i]==1) max=1;\n        }\n    }\n    return max;\n}",
        78.078,
        0.959,
        3461524459.4,
        21040.8,
        1.042,
        27
    ],
    "1": [
        "#include <stdio.h>\n#include <math.h>\n#include <vector>\n#include <unordered_map>\nusing namespace std;\n#include <algorithm>\n#include <stdlib.h>\n\nint search(vector<int> lst) {\n    unordered_map<int, int> freq;\n    int max = -1;\n    for (int i = 0; i < lst.size(); i++) {\n        freq[lst[i]]++;\n        if (freq[lst[i]] >= lst[i] && lst[i] > max) {\n            max = lst[i];\n        }\n    }\n    return max;\n}",
        6.218,
        7.216,
        80.507,
        1.003,
        7.211,
        19
    ]
}