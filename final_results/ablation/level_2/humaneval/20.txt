{
    "0": [
        "#include<stdio.h>\n#include<math.h>\n#include<vector>\nusing namespace std;\n#include<algorithm>\n#include<stdlib.h>\nvector<float> find_closest_elements(vector<float> numbers){\nvector<float> out={};\n    for (int i=0;i<numbers.size();i++)\n    for (int j=i+1;j<numbers.size();j++)\n        if (out.size()==0 or abs(numbers[i]-numbers[j])<abs(out[0]-out[1]))\n            out={numbers[i],numbers[j]};\n    if (out[0]>out[1])\n        out={out[1],out[0]};\n    return out;\n}",
        83.75,
        0.924,
        3248259403.0,
        21166.4,
        1.082,
        16
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <algorithm> \nusing namespace std;\n\nvector<float> find_closest_elements(vector<float> numbers) {\n    if (numbers.size() < 2) {\n        return {};\n    }\n    \n    sort(numbers.begin(), numbers.end());\n\n    vector<float> out = {numbers[0], numbers[1]};\n    float min_diff = abs(numbers[1] - numbers[0]);\n\n    \n    for (size_t i = 1; i < numbers.size() - 1; ++i) {\n        float diff = abs(numbers[i + 1] - numbers[i]);\n        if (diff < min_diff) {\n            min_diff = diff;\n            out[0] = numbers[i];\n            out[1] = numbers[i + 1];\n        }\n    }\n\n    return out;\n}",
        7.051,
        7.004,
        173.048,
        1.01,
        6.998,
        27
    ]
}