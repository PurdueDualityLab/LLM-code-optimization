{
    "0": [
        "#include<stdio.h>\n#include<string>\nusing namespace std;\n#include<algorithm>\n#include<math.h>\n#include<stdlib.h>\nstring words_in_sentence(string sentence){\nstring out=\"\";\n    string current=\"\";\n    sentence=sentence+' ';\n\n    for (int i=0;i<sentence.size();i++)\n    if (sentence[i]!=' ') current=current+sentence[i];\n    else\n    {\n        bool isp=true;\n        int l=current.length();\n        if (l<2) isp=false;\n        for (int j=2;j*j<=l;j++)\n            if (l%j==0) isp=false;\n        if (isp) out=out+current+' ';\n        current=\"\";        \n    }\n    if (out.length()>0)\n        out.pop_back();\n    return out;\n}",
        4.512,
        0.128,
        4729885.4,
        21010.4,
        7.826,
        27
    ],
    "1": [
        "#include <iostream>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <cmath>\nusing namespace std;\n\nbool is_prime(int n) {\n    if (n <= 1) return false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n    for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n\nstring words_in_sentence(const string &sentence) {\n    stringstream ss(sentence);\n    string word;\n    vector<string> prime_length_words;\n\n    while (ss >> word) {\n        if (is_prime(word.length())) {\n            prime_length_words.push_back(word);\n        }\n    }\n\n    stringstream out;\n    for (size_t i = 0; i < prime_length_words.size(); ++i) {\n        if (i > 0) out << \" \";\n        out << prime_length_words[i];\n    }\n    return out.str();\n}\n\n",
        0.899,
        1.009,
        0.976,
        0.995,
        1.006,
        36
    ]
}