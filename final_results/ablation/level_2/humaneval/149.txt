{
    "0": [
        "#include<stdio.h>\n#include<vector>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<math.h>\n#include<stdlib.h>\nvector<string> sorted_list_sum(vector<string> lst){\nvector<string> out={};\n    for (int i=0;i<lst.size();i++)\n    if (lst[i].length()%2==0) out.push_back(lst[i]);\n    string mid;\n    sort(out.begin(),out.end());\n    for (int i=0;i<out.size();i++)\n    for (int j=1;j<out.size();j++)\n    if (out[j].length()<out[j-1].length())\n    {\n        mid=out[j];out[j]=out[j-1];out[j-1]=mid;\n    }\n    return out;\n}",
        165.923,
        3.065,
        13585336548.6,
        311881.6,
        0.326,
        21
    ],
    "1": [
        "#include <stdio.h>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nvector<string> sorted_list_sum(vector<string> lst) {\n    \n    vector<string> out;\n    out.reserve(lst.size() / 2);\n\n    \n    for (const auto &str : lst) {\n        if (str.length() % 2 == 0) {\n            out.push_back(str);\n        }\n    }\n\n    \n    std::stable_sort(out.begin(), out.end(), [](const string &a, const string &b) {\n        if (a.length() != b.length()) {\n            return a.length() < b.length();\n        }\n        return a < b;\n    });\n\n    return out;\n}",
        11.516,
        9.622,
        16.215,
        1.0,
        9.624,
        28
    ]
}