{
    "0": [
        "#include<stdio.h>\n#include<vector>\n#include<string>\n#include<algorithm>\nusing namespace std;\n#include<math.h>\n#include<stdlib.h>\nstring find_max(vector<string> words){\nstring max=\"\";\n    int maxu=0;\n    for (int i=0;i<words.size();i++)\n    {\n        string unique=\"\";\n        for (int j=0;j<words[i].length();j++)\n            if (find(unique.begin(),unique.end(),words[i][j])==unique.end())\n                unique=unique+words[i][j];\n        if (unique.length()>maxu or (unique.length()==maxu and words[i]<max))\n        {\n            max=words[i];\n            maxu=unique.length();\n        }\n    }\n    return max;\n}",
        4.752,
        0.13,
        26353164.8,
        21043.2,
        7.682,
        24
    ],
    "1": [
        "#include <iostream>\n#include <vector>\n#include <string>\n#include <unordered_set>\nusing namespace std;\n\nstring find_max(const vector<string>& words) {\n    string max_word = \"\";\n    int max_unique_count = 0;\n\n    for (const string& word : words) {\n        unordered_set<char> unique_chars;\n        for (char c : word) {\n            unique_chars.insert(c);\n        }\n\n        int unique_count = unique_chars.size();\n\n        if (unique_count > max_unique_count || (unique_count == max_unique_count && word < max_word)) {\n            max_word = word;\n            max_unique_count = unique_count;\n        }\n    }\n\n    return max_word;\n}\n\n",
        0.992,
        1.034,
        0.834,
        0.995,
        1.034,
        27
    ]
}