{
    "0": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nmap<int, char> ans;\n\nconst int N = 1100;\n\nint n, a, b, q;\n\nint x[N], y[N], h[N];\nchar c[N][10];\n\nint get(int pos) {\n\twhile (1) {\n\t\tint now = upper_bound(y, y + b + 1, pos) - y - 1;\n\t\tif (now == 0 || h[now] == 0) return pos;\n\t\tint per = y[now] - h[now];\n\t\tpos -= ((pos - y[now]) / per + 1) * per;\n\t}\n}\n\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin >> n >> a >> b >> q;\n\tfor (int i = 1; i <= a; i++) cin >> x[i] >> c[i];\n\ty[0] = 1, y[b + 1] = n + 1;\n\tfor (int i = 1; i <= b; i++) cin >> y[i] >> h[i];\n\tfor (int i = 1; i <= a; i++) {\n\t\tans[get(x[i])] = c[i][0];\n\t}\n\tfor (int i = 1; i <= q; i++) {\n\t\tint z; cin >> z; \n//\t\tcerr << z << endl;\n\t\tz = get(z);\n//\t\tcerr << z << endl;\n\t\tif (!ans.count(z)) cout << \"?\";\n\t\telse cout << ans[z];\n\t}\n\tcout << endl;\n\treturn 0;\n}\n\n",
        0.429,
        2.609,
        7822472.082514735,
        424.0,
        0.359,
        42
    ],
    "1": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nmap<int, char> ans;\n\nconst int N = 1100;\n\nint n, a, b, q;\nint x[N], y[N], h[N];\nchar c[N][10];\n\nint get(int pos) {\n    int now;\n    while (true) {\n        now = upper_bound(y, y + b + 1, pos) - y - 1;\n        if (now == 0 || h[now] == 0) return pos;\n        int per = y[now] - h[now];\n        pos -= ((pos - y[now]) / per + 1) * per;\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(nullptr);\n    cin >> n >> a >> b >> q;\n    for (int i = 1; i <= a; ++i) cin >> x[i] >> c[i];\n    y[0] = 1, y[b + 1] = n + 1;\n    for (int i = 1; i <= b; ++i) cin >> y[i] >> h[i];\n    for (int i = 1; i <= a; ++i) {\n        ans[get(x[i])] = c[i][0];\n    }\n    for (int i = 1; i <= q; ++i) {\n        int z; cin >> z; \n        z = get(z);\n        if (!ans.count(z)) cout << \"?\";\n        else cout << ans[z];\n    }\n    cout << '\\n';\n    return 0;\n}",
        0.429,
        2.628,
        7876971.137524558,
        440.0,
        0.48663330078125,
        39
    ],
    "2": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nunordered_map<int, char> ans;  \n\nconst int N = 1100;\n\nint n, a, b, q;\nint x[N], y[N], h[N];\nchar c[N][10];\n\nint get(int pos) {\n    while (true) {\n        int now = upper_bound(y, y + b + 1, pos) - y - 1;\n        if (now == 0 || h[now] == 0) return pos;\n        int per = y[now] - h[now];\n        int steps = ((pos - y[now]) / per) + 1;\n        pos -= steps * per;\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n >> a >> b >> q;\n    for (int i = 1; i <= a; ++i) cin >> x[i] >> c[i];\n    y[0] = 1, y[b + 1] = n + 1;\n    for (int i = 1; i <= b; ++i) cin >> y[i] >> h[i];\n\n    for (int i = 1; i <= a; ++i) {\n        ans[get(x[i])] = c[i][0];\n    }\n\n    string output;\n    for (int i = 1; i <= q; ++i) {\n        int z;\n        cin >> z;\n        z = get(z);\n        if (ans.count(z))\n            output += ans[z];\n        else\n            output += '?';\n    }\n\n    cout << output << '\\n';  \n    return 0;\n}",
        0.411,
        2.522,
        7558703.320235756,
        448.0,
        0.5025634765625,
        48
    ],
    "3": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nunordered_map<int, char> ans;  \nconst int N = 1100;\nint n, a, b, q;\nint x[N], y[N], h[N];\nchar c[N][10];\nunordered_map<int, int> cache;\n\nint precompute() {\n    y[0] = 1, y[b + 1] = n + 1;\n    for (int i = 1; i <= b; ++i) {\n        cin >> y[i] >> h[i];\n    }\n    return 0;\n}\n\nint get(int pos) {\n    if (cache.find(pos) != cache.end()) return cache[pos];\n    int original = pos;\n    while (true) {\n        int now = upper_bound(y, y + b + 1, pos) - y - 1;\n        if (now == 0 || h[now] == 0) return cache[original] = pos;\n        int per = y[now] - h[now];\n        int steps = ((pos - y[now]) / per) + 1;\n        pos -= steps * per;\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n >> a >> b >> q;\n    for (int i = 1; i <= a; ++i) cin >> x[i] >> c[i];\n    precompute();\n\n    for (int i = 1; i <= a; ++i) {\n        ans[get(x[i])] = c[i][0];\n    }\n\n    string output;\n    for (int i = 1; i <= q; ++i) {\n        int z;\n        cin >> z;\n        z = get(z);\n        output += ans.count(z) ? ans[z] : '?';\n    }\n\n    cout << output << '\\n';  \n    return 0;\n}\n\n",
        0.38,
        2.319,
        6952517.487229862,
        440.0,
        0.2945556640625,
        54
    ],
    "4": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nunordered_map<int, char> ans;  \nconst int N = 1100;\nint n, a, b, q;\nint x[N], y[N], h[N];\nchar c[N][10];\nunordered_map<int, int> cache;\n\nvoid precompute() {\n    y[0] = 1;\n    y[b + 1] = n + 1;\n    for (int i = 1; i <= b; ++i) {\n        cin >> y[i] >> h[i];\n    }\n}\n\nint get(int pos) {\n    if (cache.find(pos) != cache.end()) return cache[pos];\n    int original = pos;\n    while (true) {\n        int now = upper_bound(y, y + b + 1, pos) - y - 1;\n        if (now == 0 || h[now] == 0) return cache[original] = pos;\n        int per = y[now] - h[now];\n        int steps = ((pos - y[now]) / per) + 1;\n        pos -= steps * per;\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n >> a >> b >> q;\n    for (int i = 1; i <= a; ++i) cin >> x[i] >> c[i];\n    precompute();\n\n    \n    string output;\n    output.reserve(q);\n    \n    for (int i = 1; i <= a; ++i) {\n        ans[get(x[i])] = c[i][0];\n    }\n\n    for (int i = 1; i <= q; ++i) {\n        int z;\n        cin >> z;\n        z = get(z);\n        output += (ans.count(z) ? ans[z] : '?');\n    }\n\n    cout << output << '\\n';  \n    return 0;\n}\n\n",
        0.423,
        2.59,
        7765653.019646365,
        440.0,
        0.46734619140625,
        57
    ],
    "5": [
        "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1100;\nint n, a, b, q;\nint x[N], y[N], h[N];\nchar c[N][10];\nvector<char> answerMarker(N, '?');  \nvector<int> cacheResult(N, -1);  \n\nvoid precompute() {\n    y[0] = 1;\n    y[b + 1] = n + 1;\n    for (int i = 1; i <= b; ++i) {\n        cin >> y[i] >> h[i];\n    }\n}\n\nint get(int pos) {\n    if (cacheResult[pos] != -1) return cacheResult[pos];\n    int originalPos = pos;\n    while (true) {\n        auto nowIt = upper_bound(y, y + b + 1, pos) - y - 1;\n        if (nowIt == 0 || h[nowIt] == 0) return cacheResult[originalPos] = pos;\n        int period = y[nowIt] - h[nowIt];\n        int steps = ((pos - y[nowIt]) / period) + 1;\n        pos -= steps * period;\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n >> a >> b >> q;\n    for (int i = 1; i <= a; ++i) cin >> x[i] >> c[i];\n    precompute();\n\n    for (int i = 1; i <= a; ++i) {\n        int finalPos = get(x[i]);\n        answerMarker[finalPos] = c[i][0];\n    }\n\n    for (int i = 1; i <= q; ++i) {\n        int z;\n        cin >> z;\n        int finalResult = get(z);\n        if (answerMarker[finalResult] != '?')  \n            cout << answerMarker[finalResult];\n        else\n            cout << '?';\n    }\n    cout << '\\n';  \n    return 0;\n}",
        0.336,
        2.48,
        7433948.730844794,
        440.0,
        0.38897705078125,
        55
    ]
}