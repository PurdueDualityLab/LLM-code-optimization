You are tasked with selecting optimization patterns that when applied are likely to improve code performance. Please follow these steps and guidelines:

Task Instructions:
    1. Analyze the provided Source Code
        - Examing the Source Code to identify inefficiencies and areas for improvement.
        - Look for areas of high latency, use of complex operations/instructions, inefficient memory allocations, inefficient memory accesses, and inefficient I/O operations.
    2. Analyze the Optimization Patterns
        - Using pattern description and example, assess how well each optimization pattern addresses the inefficiencies found in Source Code.
        - Based on the assessment, select the five best optimization patterns.

Output Requirements:
    - For the five selected patterns, return the pattern name, description, and example.

Optimization Patterns:
{patterns}

Source Code:
{source_code}